
CONSTRUCT {
	?uri a owl:Class .
	?uri rdfs:subClassOf generic:Attach .
	?uri rdfs:label ?newlabel .
	?ClientHostRole core:hasRole generic:ClientHostRole .
	?HumanRole core:hasRole generic:HumanRole .
	?MailClientRole core:hasRole generic:MailClientRole .
	?ServiceRole core:hasRole generic:ServiceRole .
	?uri rdfs:subClassOf _:b0 .
	_:b0 a owl:Restriction .
	_:b0 owl:onProperty core:hasNode .
	_:b0 owl:someValuesFrom _:b1 .
	_:b1 a owl:Class .
	_:b1 owl:intersectionOf _:b2 .
	_:b2 rdf:first _:b3 .
	_:b3 a owl:Restriction .
	_:b3 owl:hasValue generic:ClientHostRole .
	_:b3 owl:onProperty core:hasRole .
	_:b2 rdf:rest _:b4 .
	_:b4 rdf:first _:b5 .
	_:b5 a owl:Restriction .
	_:b5 owl:someValuesFrom ?ClientHostRole .
	_:b5 owl:onProperty core:hasAsset .
	_:b4 rdf:rest rdf:nil .
	?uri rdfs:subClassOf _:b6 .
	_:b6 a owl:Restriction .
	_:b6 owl:onProperty core:hasNode .
	_:b6 owl:someValuesFrom _:b7 .
	_:b7 a owl:Class .
	_:b7 owl:intersectionOf _:b8 .
	_:b8 rdf:first _:b9 .
	_:b9 a owl:Restriction .
	_:b9 owl:hasValue generic:HumanRole .
	_:b9 owl:onProperty core:hasRole .
	_:b8 rdf:rest _:b10 .
	_:b10 rdf:first _:b11 .
	_:b11 a owl:Restriction .
	_:b11 owl:someValuesFrom ?HumanRole .
	_:b11 owl:onProperty core:hasAsset .
	_:b10 rdf:rest rdf:nil .
	?uri rdfs:subClassOf _:b12 .
	_:b12 a owl:Restriction .
	_:b12 owl:onProperty core:hasNode .
	_:b12 owl:someValuesFrom _:b13 .
	_:b13 a owl:Class .
	_:b13 owl:intersectionOf _:b14 .
	_:b14 rdf:first _:b15 .
	_:b15 a owl:Restriction .
	_:b15 owl:hasValue generic:MailClientRole .
	_:b15 owl:onProperty core:hasRole .
	_:b14 rdf:rest _:b16 .
	_:b16 rdf:first _:b17 .
	_:b17 a owl:Restriction .
	_:b17 owl:someValuesFrom ?MailClientRole .
	_:b17 owl:onProperty core:hasAsset .
	_:b16 rdf:rest rdf:nil .
	?uri rdfs:subClassOf _:b18 .
	_:b18 a owl:Restriction .
	_:b18 owl:onProperty core:hasNode .
	_:b18 owl:someValuesFrom _:b19 .
	_:b19 a owl:Class .
	_:b19 owl:intersectionOf _:b20 .
	_:b20 rdf:first _:b21 .
	_:b21 a owl:Restriction .
	_:b21 owl:hasValue generic:ServiceRole .
	_:b21 owl:onProperty core:hasRole .
	_:b20 rdf:rest _:b22 .
	_:b22 rdf:first _:b23 .
	_:b23 a owl:Restriction .
	_:b23 owl:someValuesFrom ?ServiceRole .
	_:b23 owl:onProperty core:hasAsset .
	_:b22 rdf:rest rdf:nil .
} WHERE {
	SELECT DISTINCT * WHERE {

		GRAPH system: {
			?ClientHostRole rdfs:subClassOf ?chrc ,
			[
				a owl:Restriction ;
				owl:onProperty generic:hosts ;
				owl:someValuesFrom ?MailClientRole ;
			].
			?HumanRole rdfs:subClassOf ?hrc ,
			[
				a owl:Restriction ;
				owl:onProperty generic:controls ;
		 		owl:someValuesFrom ?MailClientRole
		 	].
			?MailClientRole rdfs:subClassOf ?mcrc ,
			[
				a owl:Restriction ;
				owl:onProperty generic:uses;
				owl:someValuesFrom ?ServiceRole ;
			].
			?ServiceRole rdfs:subClassOf ?src.

			OPTIONAL { ?ClientHostRole rdfs:label ?labelClientHostRole . } .
			OPTIONAL { ?HumanRole rdfs:label ?labelHumanRole . } .
			OPTIONAL { ?MailClientRole rdfs:label ?labelMailClientRole . } .
			OPTIONAL { ?ServiceRole rdfs:label ?labelServiceRole . } .

			FILTER(isURI(?chrc) && isURI(?hrc) && isURI(?mcrc) && isURI(?src))
		}
        ?chrc rdfs:subClassOf* generic:Host.
        ?hrc  rdfs:subClassOf* generic:Human.
        ?mcrc rdfs:subClassOf* generic:LogicalAsset.
        ?src  rdfs:subClassOf* generic:MailStore.

		BIND (IF(BOUND(?labelClientHostRole), ?labelClientHostRole, STRAFTER(str(?ClientHostRole), "#")) AS ?lClientHostRole) .
		BIND (IF(BOUND(?labelHumanRole), ?labelHumanRole, STRAFTER(str(?HumanRole), "#")) AS ?lHumanRole) .
		BIND (IF(BOUND(?labelMailClientRole), ?labelMailClientRole, STRAFTER(str(?MailClientRole), "#")) AS ?lMailClientRole) .
		BIND (IF(BOUND(?labelServiceRole), ?labelServiceRole, STRAFTER(str(?ServiceRole), "#")) AS ?lServiceRole) .
		BIND (fn:concat(STRAFTER(str(generic:Attach), "#"), "_", STRAFTER(str(?ClientHostRole), "#"), "_", STRAFTER(str(?HumanRole), "#"), "_", STRAFTER(str(?MailClientRole), "#"), "_", STRAFTER(str(?ServiceRole), "#")) AS ?newclass) .
		BIND (fn:concat(STRAFTER(str(generic:Attach), "#"), "_", ?lClientHostRole, "_", ?lHumanRole, "_", ?lMailClientRole, "_", ?lServiceRole) AS ?newlabel) .
		BIND (URI(fn:concat(STRBEFORE(str(?ClientHostRole), "#"), "#", ?newclass)) AS ?uri) .
        FILTER NOT EXISTS {
			?auri a owl:Class .
      		FILTER(?uri = ?auri)
        } .
	}
}